<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fangdd.testcenter.mapper.WeeklyReportMapper">
	<resultMap id="WeeklyReportResultMap" type="WeeklyReport">
		<id property="weeklyReportId" column="id" />
		<result property="type" column="type" />
		<result property="versionInfo" column="version_info" />
		<result property="resource" column="resource" />
		<result property="caseNumber" column="case_number" />
		<result property="versionTestTime" column="version_test_time" />
		<result property="testTime" column="test_time" />
		<result property="testStatus" column="test_status" />
		<result property="bugNumber" column="bug_number" />
		<result property="versionReleaseTime" column="version_release_time" />
		<result property="remark" column="remark" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<result property="bugCritical" column="bug_critical" />
		<association property="user" javaType="User">
			<id property="userId" column="userId" />
			<result property="trueName" column="trueName" />
		</association>
		<association property="department" javaType="Department">
			<id property="departmentId" column="departmentId" />
			<result property="name" column="departmentName" />
		</association>
		<association property="team" javaType="Team">
			<id property="teamId" column="teamId" />
			<result property="name" column="teamName" />
		</association>
		<association property="project" javaType="ProjectInfo">
			<id property="projectId" column="projectId" />
			<result property="projectName" column="projectName" />
		</association>
	</resultMap>
	<sql id="WeeklyReportColumnSQL">
		t_weekly_report.id,
		t_weekly_report.type,
		t_weekly_report.version_info,
		t_weekly_report.resource,
		t_weekly_report.case_number,
		t_weekly_report.version_test_time,
		t_weekly_report.test_time,
		t_weekly_report.test_status,
		t_weekly_report.bug_number,
		t_weekly_report.version_release_time,
		t_weekly_report.bug_critical,
		t_weekly_report.remark,
		t_weekly_report.create_time,
		t_weekly_report.update_time
	</sql>
	<sql id="UserColumnSQL">
		t_user.id as userId,
		t_user.true_name as trueName
	</sql>
	<sql id="DepartmentColumnSQL">
		t_department.id as departmentId,
		t_department.name as
		departmentName
	</sql>
	<sql id="TeamColumnSQL">
		t_team.id as teamId,
		t_team.name as teamName
	</sql>
	<sql id="ProjectInfoColumnSQL">
		t_project_info.id as projectId,
		t_project_info.project_name
		as projectName
	</sql>
	<sql id="joinSql">
		from t_weekly_report
		left join t_user
		on
		t_weekly_report.user_id=t_user.id
		left join t_department
		on
		t_weekly_report.department_id=t_department.id
		left join t_team
		on
		t_weekly_report.team_id=t_team.id
		left join t_project_info
		on
		t_weekly_report.project_id=t_project_info.id
	</sql>
	<sql id="selectConditionSql">
		<if test="weeklyReport.user != null and weeklyReport.user.trueName !=''">
			and t_user.true_name like
			'%${weeklyReport.user.trueName}%'
		</if>
		<if
			test="weeklyReport.department != null and weeklyReport.department.departmentId >0">
			and
			t_weekly_report.department_id=#{weeklyReport.department.departmentId}
		</if>
		<if test="weeklyReport.team != null and weeklyReport.team.teamId >0">
			and t_weekly_report.team_id=#{weeklyReport.team.teamId}
		</if>
		<if
			test="weeklyReport.project != null and weeklyReport.project.projectId > 0">
			and
			t_weekly_report.project_id=#{weeklyReport.project.projectId}
		</if>
		<if test="weeklyReport.testStatus != null and weeklyReport.testStatus >0">
			and t_weekly_report.test_status=#{weeklyReport.testStatus}
		</if>
		<if test="weeklyReport.type != null and weeklyReport.type >0">
			and t_weekly_report.type=#{weeklyReport.type}
		</if>
		<if test="weeklyReport.typeListStr != null and weeklyReport.typeListStr !=''">
			and t_weekly_report.type in (${weeklyReport.typeListStr})
		</if>
		<if test="weeklyReport.resource != null and weeklyReport.resource !=''">
			and t_weekly_report.resource like
			'%${weeklyReport.resource}%'
		</if>
		<if test="weeklyReport.startTime != null and weeklyReport.startTime !=''">
			and
			t_weekly_report.create_time &gt;=
			#{weeklyReport.startTime}
		</if>
		<if test="weeklyReport.endTime != null and weeklyReport.endTime !=''">
			and
			t_weekly_report.create_time &lt;=
			#{weeklyReport.endTime}
		</if>
		<if test="weeklyReport.releaseStartTime != null and weeklyReport.releaseStartTime !=''">
			and
			t_weekly_report.version_release_time &gt;=
			#{weeklyReport.releaseStartTime}
		</if>
		<if test="weeklyReport.releaseEndTime != null and weeklyReport.releaseEndTime !=''">
			and
			t_weekly_report.version_release_time &lt;=
			#{weeklyReport.releaseEndTime}
		</if>
	</sql>
	
	<insert id="addWeeklyReport" useGeneratedKeys="true"
		keyProperty="weeklyReport.weeklyReportId">
		insert into t_weekly_report(
		user_id,
		department_id,
		team_id,
		project_id,
		type,
		version_info,
		resource,
		case_number,
		<if
			test="weeklyReport.versionTestTime != null and weeklyReport.versionTestTime !=''">
			version_test_time,
		</if>
		test_time,
		test_status,
		bug_number,
		<if
			test="weeklyReport.versionReleaseTime != null and weeklyReport.versionReleaseTime !=''">
			version_release_time,
		</if>
		bug_critical,
		remark,
		create_time,
		update_time
		)
		values(
		#{weeklyReport.user.userId},
		#{weeklyReport.department.departmentId},
		#{weeklyReport.team.teamId},
		#{weeklyReport.project.projectId},
		#{weeklyReport.type},
		#{weeklyReport.versionInfo},
		#{weeklyReport.resource},
		#{weeklyReport.caseNumber},
		<if
			test="weeklyReport.versionTestTime != null and weeklyReport.versionTestTime!=''">
			#{weeklyReport.versionTestTime},
		</if>
		#{weeklyReport.testTime},
		#{weeklyReport.testStatus},
		#{weeklyReport.bugNumber},
		<if
			test="weeklyReport.versionReleaseTime != null and weeklyReport.versionReleaseTime!=''">
			#{weeklyReport.versionReleaseTime},
		</if>
		#{weeklyReport.bugCritical},
		#{weeklyReport.remark},
		NOW(),
		NOW()
		)
	</insert>
	<update id="updateWeeklyReport">
		update t_weekly_report
		set
		t_weekly_report.team_id=#{weeklyReport.team.teamId},
		t_weekly_report.project_id=#{weeklyReport.project.projectId},
		t_weekly_report.type=#{weeklyReport.type},
		t_weekly_report.version_info=#{weeklyReport.versionInfo},
		t_weekly_report.resource=#{weeklyReport.resource},
		t_weekly_report.case_number=#{weeklyReport.caseNumber},
		<if
			test="weeklyReport.versionTestTime == null or weeklyReport.versionTestTime ==''">
			t_weekly_report.version_test_time=null,
		</if>

		<if
			test="weeklyReport.versionTestTime != null and weeklyReport.versionTestTime !=''">
			t_weekly_report.version_test_time=#{weeklyReport.versionTestTime},
		</if>
		t_weekly_report.test_time=#{weeklyReport.testTime},
		t_weekly_report.test_status=#{weeklyReport.testStatus},
		t_weekly_report.bug_number=#{weeklyReport.bugNumber},
		<if
			test="weeklyReport.versionReleaseTime == null or weeklyReport.versionReleaseTime  ==''">
			t_weekly_report.version_release_time=null,
		</if>

		<if
			test="weeklyReport.versionReleaseTime != null and weeklyReport.versionReleaseTime !=''">
			t_weekly_report.version_release_time=#{weeklyReport.versionReleaseTime},
		</if>
		t_weekly_report.bug_critical=#{weeklyReport.bugCritical},
		t_weekly_report.remark=#{weeklyReport.remark},
		t_weekly_report.update_time=NOW()
		where
		t_weekly_report.id =
		#{weeklyReport.weeklyReportId}
	</update>
	<delete id="deleteWeeklyReport">
		delete from
		t_weekly_report
		where
		t_weekly_report.id=#{weeklyReportId}
	</delete>
	<select id="getWeeklyReportCount" resultType="int">
		select count(1)
		<include refid="joinSql" />
		where
		1 = 1
		<include refid="selectConditionSql" />
	</select>
	<select id="getWeeklyReportList" resultMap="WeeklyReportResultMap">
		select
		<include refid="WeeklyReportColumnSQL" />
		,
		<include refid="UserColumnSQL" />
		,
		<include refid="DepartmentColumnSQL" />
		,
		<include refid="TeamColumnSQL" />
		,
		<include refid="ProjectInfoColumnSQL" />
		<include refid="joinSql" />
		where
		1 = 1
		<include refid="selectConditionSql" />
		order by t_weekly_report.create_time desc
		limit
		#{begin},#{size}
	</select>
	<select id="getWeeklyReportStatisticList" resultMap="WeeklyReportResultMap">
		select
		<include refid="WeeklyReportColumnSQL" />
		,
		<include refid="UserColumnSQL" />
		,
		<include refid="DepartmentColumnSQL" />
		,
		<include refid="TeamColumnSQL" />
		,
		<include refid="ProjectInfoColumnSQL" />
		<include refid="joinSql" />
		where
		1 = 1
		<include refid="selectConditionSql" />
		<if
			test="weeklyReport.orderBy == null or weeklyReport.orderBy ==''">
			order by t_weekly_report.version_release_time desc
		</if>
		<if
			test="weeklyReport.orderBy != null and weeklyReport.orderBy =='asc'">
			order by t_weekly_report.version_release_time asc
		</if>
		<if
			test="weeklyReport.orderBy != null and weeklyReport.orderBy =='desc'">
			order by t_weekly_report.version_release_time desc
		</if>
		limit
		#{begin},#{size}
	</select>
	<select id="getWeeklyReportById" resultMap="WeeklyReportResultMap">
		select
		<include refid="WeeklyReportColumnSQL" />
		,
		<include refid="UserColumnSQL" />
		,
		<include refid="DepartmentColumnSQL" />
		,
		<include refid="TeamColumnSQL" />
		,
		<include refid="ProjectInfoColumnSQL" />
		<include refid="joinSql" />
		where
		t_weekly_report.id =
		#{weeklyReportId}
	</select>
	<select id="getWeeklyReportExportList" resultMap="WeeklyReportResultMap">
		select
		<include refid="WeeklyReportColumnSQL" />
		,
		<include refid="UserColumnSQL" />
		,
		<include refid="DepartmentColumnSQL" />
		,
		<include refid="TeamColumnSQL" />
		,
		<include refid="ProjectInfoColumnSQL" />
		<include refid="joinSql" />
		where
		1 = 1
		<include refid="selectConditionSql" />
		order by t_weekly_report.department_id desc,t_weekly_report.team_id
		desc,t_weekly_report.project_id desc,t_weekly_report.create_time desc
	</select>
</mapper> 
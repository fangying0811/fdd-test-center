<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fangdd.testcenter.mapper.OnlineIssueMapper">
	<resultMap id="OnlineIssueResultMap" type="OnlineIssue">
		<id property="onlineIssueId" column="id" />
		<result property="issueId" column="issue_id" />
		<result property="reason" column="reason" />
		<result property="solution" column="solution" />
		<result property="improvement" column="improvement" />
		<result property="process" column="process" />
		<result property="resolveStatus" column="resolve_status" />
		<result property="createTime" column="create_time" />
		<result property="updateTime" column="update_time" />
		<association property="user" javaType="User">
			<id property="userId" column="userId" />
			<result property="trueName" column="trueName" />
		</association>
		<association property="department" javaType="Department">
			<id property="departmentId" column="departmentId" />
			<result property="name" column="departmentName" />
		</association>
		<association property="team" javaType="Team">
			<id property="teamId" column="teamId" />
			<result property="name" column="teamName" />
		</association>
		<association property="project" javaType="ProjectInfo">
			<id property="projectId" column="projectId" />
			<result property="projectName" column="projectName" />
		</association>
	</resultMap>

	<sql id="OnlineIssueColumnSQL">
		t_online_issue.id,
		t_online_issue.issue_id,
		t_online_issue.reason,
		t_online_issue.solution,
		t_online_issue.improvement,
		t_online_issue.process,
		t_online_issue.resolve_status,
		t_online_issue.create_time,
		t_online_issue.update_time
	</sql>

	<sql id="UserColumnSQL">
		t_user.id as userId,
		t_user.true_name as trueName
	</sql>

	<sql id="DepartmentColumnSQL">
		t_department.id as departmentId,
		t_department.name as
		departmentName
	</sql>

	<sql id="TeamColumnSQL">
		t_team.id as teamId,
		t_team.name as teamName
	</sql>

	<sql id="ProjectInfoColumnSQL">
		t_project_info.id as projectId,
		t_project_info.project_name
		as projectName
	</sql>

	<sql id="joinSql">
		from t_online_issue
		left join t_user
		on
		t_online_issue.user_id = t_user.id
		left join t_department
		on
		t_online_issue.department_id = t_department.id
		left join t_team
		on
		t_online_issue.team_id = t_team.id
		left join t_project_info
		on
		t_online_issue.project_id = t_project_info.id
	</sql>

	<sql id="selectConditionSql">
		<if test="onlineIssue.user != null and onlineIssue.user.trueName !=''">
			and t_user.true_name like
			'%${onlineIssue.user.trueName}%'
		</if>
		<if
			test="onlineIssue.department != null and onlineIssue.department.departmentId > 0">
			and
			t_online_issue.department_id =
			#{onlineIssue.department.departmentId}
		</if>
		<if test="onlineIssue.team != null and onlineIssue.team.teamId > 0">
			and
			t_online_issue.team_id=#{onlineIssue.team.teamId}
		</if>
		<if
			test="onlineIssue.project != null and onlineIssue.project.projectId > 0">
			and
			t_online_issue.project_id=#{onlineIssue.project.projectId}
		</if>
		<if test="onlineIssue.process != null and onlineIssue.process>0">
			and
			t_online_issue.process=#{onlineIssue.process}
		</if>
		<if
			test="onlineIssue.resolveStatus != null and onlineIssue.resolveStatus>0">
			and
			t_online_issue.resolve_status=#{onlineIssue.resolveStatus}
		</if>
		<if test="onlineIssue.issueId != null and onlineIssue.issueId>0">
			and
			t_online_issue.issue_id=#{onlineIssue.issueId}
		</if>
		<if test="onlineIssue.startTime != null and onlineIssue.startTime !=''">
			and
			t_online_issue.create_time &gt;=
			#{onlineIssue.startTime}
		</if>
		<if test="onlineIssue.endTime != null and onlineIssue.endTime !=''">
			and
			t_online_issue.create_time &lt;=
			#{onlineIssue.endTime}
		</if>
	</sql>

	<insert id="addOnlineIssue" useGeneratedKeys="true"
		keyProperty="onlineIssue.onlineIssueId">
		insert into t_online_issue (
		user_id,
		department_id,
		team_id,
		project_id,
		issue_id,
		reason,
		solution,
		improvement,
		process,
		resolve_status,
		create_time,
		update_time
		)
		values (
		#{onlineIssue.user.userId},
		#{onlineIssue.department.departmentId},
		#{onlineIssue.team.teamId},
		#{onlineIssue.project.projectId},
		#{onlineIssue.issueId},
		#{onlineIssue.reason},
		#{onlineIssue.solution},
		#{onlineIssue.improvement},
		1,
		#{onlineIssue.resolveStatus},
		NOW(),
		NOW()
		)
	</insert>

	<update id="updateOnlineIssue">
		update t_online_issue
		set
		t_online_issue.team_id =
		#{onlineIssue.team.teamId},
		t_online_issue.project_id =
		#{onlineIssue.project.projectId},
		t_online_issue.issue_id =
		#{onlineIssue.issueId},
		t_online_issue.reason =
		#{onlineIssue.reason},
		t_online_issue.solution =
		#{onlineIssue.solution},
		t_online_issue.improvement =
		#{onlineIssue.improvement},
		t_online_issue.process=2,
		t_online_issue.resolve_status =
		#{onlineIssue.resolveStatus},
		t_online_issue.update_time=NOW()
		where
		t_online_issue.id=#{onlineIssue.onlineIssueId}
	</update>

	<delete id="deleteOnlineIssue">
		delete
		from
		t_online_issue
		where
		t_online_issue.id =
		#{onlineIssueId}
	</delete>

	<select id="getOnlineIssueCount" resultType="int">
		select count(1)
		<include refid="joinSql" />
		where 1 = 1
		<include refid="selectConditionSql" />
	</select>

	<select id="getOnlineIssueList" resultMap="OnlineIssueResultMap">
		select
		<include refid="OnlineIssueColumnSQL" />
		,
		<include refid="UserColumnSQL" />
		,
		<include refid="DepartmentColumnSQL" />
		,
		<include refid="TeamColumnSQL" />
		,
		<include refid="ProjectInfoColumnSQL" />
		<include refid="joinSql" />
		where
		1 = 1
		<include refid="selectConditionSql" />
		order by t_online_issue.create_time desc
		limit
		#{begin},#{size}
	</select>

	<select id="getOnlineIssueById" resultMap="OnlineIssueResultMap">
		select
		<include refid="OnlineIssueColumnSQL" />
		,
		<include refid="UserColumnSQL" />
		,
		<include refid="DepartmentColumnSQL" />
		,
		<include refid="TeamColumnSQL" />
		,
		<include refid="ProjectInfoColumnSQL" />
		<include refid="joinSql" />
		where
		t_online_issue.id=#{onlineIssueId}
	</select>
	
	<select id="getOnlineIssueCountByIssueId" resultType="int">
		select count(1)
		from t_online_issue
		where
		t_online_issue.issue_id=#{issueId}
	</select>
	

	<select id="getOnlineIssueExportList" resultMap="OnlineIssueResultMap">
		select
		<include refid="OnlineIssueColumnSQL" />
		,
		<include refid="UserColumnSQL" />
		,
		<include refid="DepartmentColumnSQL" />
		,
		<include refid="TeamColumnSQL" />
		,
		<include refid="ProjectInfoColumnSQL" />
		<include refid="joinSql" />
		where
		1 = 1
		<include refid="selectConditionSql" />
		order by t_online_issue.department_id
		desc,t_online_issue.team_id
		desc,t_online_issue.project_id
		desc,t_online_issue.create_time desc
	</select>
</mapper> 